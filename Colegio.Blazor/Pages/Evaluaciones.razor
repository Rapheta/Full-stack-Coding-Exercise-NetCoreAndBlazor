@page "/evaluaciones"

@using Data;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http;
@inject NavigationManager Navigationmanager;

<style>
    .summary {
        background: #ddd;
        font-weight:bold;
    }
</style>

<h3><span class="oi oi-task" aria-hidden="true"></span>&nbsp;&nbsp;Evaluaciones</h3>

<div class="row">
    <div class="col-12 text-right">
        <a class="btn btn-outline-success btn-sm mb-2" href="evaluacionForm"><span class="oi oi-plus" aria-hidden="true"></span> Nuevo</a>
    </div>
</div>

<div class="container-fluid mt-3 mb-5">
    <div class="form-group row mb-1">
        <label class="col-sm-1"><b>Alumno</b></label>
        <div class="col-sm-5">
            <select class="form-control form-control-sm" @onchange="FiltrarPorAlumno">
                <option value="0" selected>-- Seleccione un alumno --</option>
                @foreach (var alumno in oAlumnos)
                {
                    <option value="@alumno.Id">@String.Concat(alumno.Nombre, " ", alumno.Apellidos)</option>
                }
            </select>
        </div>
    </div>
</div>

<table class="table table-sm table-hover">
    @if (oRespuesta != null)
    {
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Alumno</th>
                <th scope="col">Asignatura</th>
                <th scope="col">Calificacion</th>
                <th scope="col">Comentario</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var oElement in oRespuesta)
            {
                <tr>
                    <td scope="row">@oElement.Id</td>
                    <td>@oElement.Alumno</td>
                    <td>@oElement.Asignatura</td>
                    <td>@oElement.Calificacion.ToString("#.##")</td>
                    <td>@oElement.Comentario</td>
                    <td>
                        <div class="text-right">
                            <a class="text-primary" href="/evaluacionForm/@oElement.Id" title="Editar"><span class="oi oi-pencil" aria-hidden="true"></span></a>
                            <a class="text-danger" href="/eliminarEvaluacion/@oElement.Id" title="Eliminar"><span class="oi oi-x" aria-hidden="true"></span></a>
                        </div>
                    </td>
                </tr>
            }
            <tr class="summary">
                <td scope="row"></td>
                <td>Nota media:</td>
                <td></td>
                <td>@notaMedia.ToString("#.##")</td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    }
</table>

@code {
    public string Url = "/Evaluacion";

    public IEnumerable<Evaluacion> oRespuesta = new List<Evaluacion>();

    public IEnumerable<Alumno> oAlumnos = new List<Alumno>();
    public string UrlAlumnos = "/Alumnos";

    [Parameter]
    public int AlumnoId { get; set; }

    private double notaMedia = 0;

    protected override async Task OnInitializedAsync()
    {
        oRespuesta = await Http.GetFromJsonAsync<IEnumerable<Evaluacion>>(Url);
        notaMedia = oRespuesta.Average(e => e.Calificacion);

        oAlumnos = await Http.GetFromJsonAsync<IEnumerable<Alumno>>(UrlAlumnos);
    }

    private async Task FiltrarPorAlumno(ChangeEventArgs e)
    {
        AlumnoId = Convert.ToInt32(e.Value);
        notaMedia = 0;

        if (AlumnoId != 0)
        {
            oRespuesta = await Http.GetFromJsonAsync<IEnumerable<Evaluacion>>(Url + "/GetEvaluaciones/" + AlumnoId);
        }
        else
        {
            oRespuesta = await Http.GetFromJsonAsync<IEnumerable<Evaluacion>>(Url);
        }

        if(oRespuesta.Count() > 0)
        {
            notaMedia = oRespuesta.Average(e => e.Calificacion);
        }
    }
}