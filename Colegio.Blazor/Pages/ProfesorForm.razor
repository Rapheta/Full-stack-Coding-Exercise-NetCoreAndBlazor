@page "/profesorForm"
@page "/profesorForm/{Id:int}"

@using Data
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigationmanager;

<h3><span class="oi oi-clipboard" aria-hidden="true"></span>&nbsp;&nbsp;Formulario del Profesor</h3>

<EditForm Model="@oProfesor">
    <div class="container-fluid mt-3">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control form-control-sm" @bind-Value="@oProfesor.Nombre"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Apellidos</label>
            <div class="col-sm-9">
                <InputText class="form-control form-control-sm" @bind-Value="@oProfesor.Apellidos"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Area</label>
            <div class="col-sm-9">
                <InputNumber class="form-control form-control-sm" @bind-Value="@oProfesor.Area"></InputNumber>
            </div>
        </div>

        <div class="form-group row mb-1 mt-2">
            <div class="col-sm-12">
                <button class="btn btn-success btn-sm" @onclick="Save">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Profesor oProfesor = new Profesor();
    object oRespuesta = new object();
    Profesor oRespuestaProfesor = new Profesor();
    public string Url = "/Profesores";

    private async Task Save()
    {
        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync<Profesor>(Url, oProfesor);
            oRespuesta = response.Content.ReadFromJsonAsync<object>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Profesor>(Url, oProfesor);
            oRespuesta = response.Content.ReadFromJsonAsync<object>().Result;
        }

        Navigationmanager.NavigateTo("/profesores");
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            oRespuestaProfesor = await Http.GetFromJsonAsync<Profesor>(Url + "/" + Id);
            oProfesor = oRespuestaProfesor;
        }
    }
}